package org.wso2.carbon.um.ws.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.8
 * 2020-12-31T20:26:42.608+05:30
 * Generated source version: 3.3.8
 *
 */
@WebService(targetNamespace = "http://service.ws.um.carbon.wso2.org", name = "RemoteUserStoreManagerServicePortType")
@XmlSeeAlso({org.wso2.carbon.user.core.tenant.xsd.ObjectFactory.class, org.wso2.carbon.user.api.xsd.ObjectFactory.class, org.wso2.carbon.um.ws.service.dao.xsd.ObjectFactory.class, org.wso2.carbon.user.core.xsd.ObjectFactory.class, org.wso2.carbon.user.mgt.common.xsd.ObjectFactory.class, ObjectFactory.class})
public interface RemoteUserStoreManagerServicePortType {

    @WebMethod(action = "urn:getTenantId")
    @Action(input = "urn:getTenantId", output = "urn:getTenantIdResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getTenantIdRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getTenantId", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetTenantId")
    @ResponseWrapper(localName = "getTenantIdResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetTenantIdResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Integer getTenantId()
 throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:deleteRole")
    @Action(input = "urn:deleteRole", output = "urn:deleteRoleResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:deleteRoleRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void deleteRole(

        @WebParam(partName = "parameters", name = "deleteRole", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        DeleteRole parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:isExistingRole")
    @Action(input = "urn:isExistingRole", output = "urn:isExistingRoleResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:isExistingRoleRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "isExistingRole", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.IsExistingRole")
    @ResponseWrapper(localName = "isExistingRoleResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.IsExistingRoleResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Boolean isExistingRole(

        @WebParam(name = "roleName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String roleName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getProperties")
    @Action(input = "urn:getProperties", output = "urn:getPropertiesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getPropertiesRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getProperties", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetProperties")
    @ResponseWrapper(localName = "getPropertiesResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetPropertiesResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<org.wso2.carbon.um.ws.service.ArrayOfString> getProperties(

        @WebParam(name = "tenant", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        org.wso2.carbon.user.core.tenant.xsd.Tenant tenant
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getUserListOfRole")
    @Action(input = "urn:getUserListOfRole", output = "urn:getUserListOfRoleResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getUserListOfRoleRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getUserListOfRole", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserListOfRole")
    @ResponseWrapper(localName = "getUserListOfRoleResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserListOfRoleResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getUserListOfRole(

        @WebParam(name = "roleName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String roleName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:updateUserListOfRole")
    @Action(input = "urn:updateUserListOfRole", output = "urn:updateUserListOfRoleResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:updateUserListOfRoleRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void updateUserListOfRole(

        @WebParam(partName = "parameters", name = "updateUserListOfRole", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        UpdateUserListOfRole parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:addUserClaimValue")
    @Action(input = "urn:addUserClaimValue", output = "urn:addUserClaimValueResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:addUserClaimValueRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void addUserClaimValue(

        @WebParam(partName = "parameters", name = "addUserClaimValue", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        AddUserClaimValue parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:updateRoleName")
    @Action(input = "urn:updateRoleName", output = "urn:updateRoleNameResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:updateRoleNameRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void updateRoleName(

        @WebParam(partName = "parameters", name = "updateRoleName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        UpdateRoleName parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:addRole")
    @Action(input = "urn:addRole", output = "urn:addRoleResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:addRoleRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void addRole(

        @WebParam(partName = "parameters", name = "addRole", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        AddRole parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getUserId")
    @Action(input = "urn:getUserId", output = "urn:getUserIdResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getUserIdRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getUserId", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserId")
    @ResponseWrapper(localName = "getUserIdResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserIdResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Integer getUserId(

        @WebParam(name = "username", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String username
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:deleteUser")
    @Action(input = "urn:deleteUser", output = "urn:deleteUserResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:deleteUserRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void deleteUser(

        @WebParam(partName = "parameters", name = "deleteUser", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        DeleteUser parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getProfileNames")
    @Action(input = "urn:getProfileNames", output = "urn:getProfileNamesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getProfileNamesRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getProfileNames", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetProfileNames")
    @ResponseWrapper(localName = "getProfileNamesResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetProfileNamesResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getProfileNames(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getUserClaimValues")
    @Action(input = "urn:getUserClaimValues", output = "urn:getUserClaimValuesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getUserClaimValuesRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getUserClaimValues", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserClaimValues")
    @ResponseWrapper(localName = "getUserClaimValuesResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserClaimValuesResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<org.wso2.carbon.um.ws.service.dao.xsd.ClaimDTO> getUserClaimValues(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName,
        @WebParam(name = "profileName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String profileName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:setUserClaimValue")
    @Action(input = "urn:setUserClaimValue", output = "urn:setUserClaimValueResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:setUserClaimValueRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void setUserClaimValue(

        @WebParam(partName = "parameters", name = "setUserClaimValue", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        SetUserClaimValue parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getTenantIdofUser")
    @Action(input = "urn:getTenantIdofUser", output = "urn:getTenantIdofUserResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getTenantIdofUserRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getTenantIdofUser", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetTenantIdofUser")
    @ResponseWrapper(localName = "getTenantIdofUserResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetTenantIdofUserResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Integer getTenantIdofUser(

        @WebParam(name = "username", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String username
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getUserClaimValue")
    @Action(input = "urn:getUserClaimValue", output = "urn:getUserClaimValueResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getUserClaimValueRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getUserClaimValue", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserClaimValue")
    @ResponseWrapper(localName = "getUserClaimValueResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserClaimValueResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.String getUserClaimValue(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName,
        @WebParam(name = "claim", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String claim,
        @WebParam(name = "profileName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String profileName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:listUsers")
    @Action(input = "urn:listUsers", output = "urn:listUsersResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:listUsersRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "listUsers", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.ListUsers")
    @ResponseWrapper(localName = "listUsersResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.ListUsersResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> listUsers(

        @WebParam(name = "filter", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String filter,
        @WebParam(name = "maxItemLimit", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.Integer maxItemLimit
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:updateCredentialByAdmin")
    @Action(input = "urn:updateCredentialByAdmin", output = "urn:updateCredentialByAdminResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:updateCredentialByAdminRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void updateCredentialByAdmin(

        @WebParam(partName = "parameters", name = "updateCredentialByAdmin", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        UpdateCredentialByAdmin parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getAllProfileNames")
    @Action(input = "urn:getAllProfileNames", output = "urn:getAllProfileNamesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getAllProfileNamesRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getAllProfileNames", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetAllProfileNames")
    @ResponseWrapper(localName = "getAllProfileNamesResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetAllProfileNamesResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getAllProfileNames()
 throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getRoleListOfUser")
    @Action(input = "urn:getRoleListOfUser", output = "urn:getRoleListOfUserResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getRoleListOfUserRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getRoleListOfUser", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetRoleListOfUser")
    @ResponseWrapper(localName = "getRoleListOfUserResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetRoleListOfUserResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getRoleListOfUser(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getUserList")
    @Action(input = "urn:getUserList", output = "urn:getUserListResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getUserListRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getUserList", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserList")
    @ResponseWrapper(localName = "getUserListResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserListResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getUserList(

        @WebParam(name = "claimUri", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String claimUri,
        @WebParam(name = "claimValue", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String claimValue,
        @WebParam(name = "profile", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String profile
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:addUserClaimValues")
    @Action(input = "urn:addUserClaimValues", output = "urn:addUserClaimValuesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:addUserClaimValuesRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void addUserClaimValues(

        @WebParam(partName = "parameters", name = "addUserClaimValues", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        AddUserClaimValues parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:isExistingUser")
    @Action(input = "urn:isExistingUser", output = "urn:isExistingUserResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:isExistingUserRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "isExistingUser", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.IsExistingUser")
    @ResponseWrapper(localName = "isExistingUserResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.IsExistingUserResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Boolean isExistingUser(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:addUser")
    @Action(input = "urn:addUser", output = "urn:addUserResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:addUserRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void addUser(

        @WebParam(partName = "parameters", name = "addUser", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        AddUser parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:updateRoleListOfUser")
    @Action(input = "urn:updateRoleListOfUser", output = "urn:updateRoleListOfUserResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:updateRoleListOfUserRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void updateRoleListOfUser(

        @WebParam(partName = "parameters", name = "updateRoleListOfUser", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        UpdateRoleListOfUser parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:deleteUserClaimValues")
    @Action(input = "urn:deleteUserClaimValues", output = "urn:deleteUserClaimValuesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:deleteUserClaimValuesRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void deleteUserClaimValues(

        @WebParam(partName = "parameters", name = "deleteUserClaimValues", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        DeleteUserClaimValues parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getRoleNames")
    @Action(input = "urn:getRoleNames", output = "urn:getRoleNamesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getRoleNamesRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getRoleNames", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetRoleNames")
    @ResponseWrapper(localName = "getRoleNamesResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetRoleNamesResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getRoleNames()
 throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:updateCredential")
    @Action(input = "urn:updateCredential", output = "urn:updateCredentialResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:updateCredentialRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void updateCredential(

        @WebParam(partName = "parameters", name = "updateCredential", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        UpdateCredential parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:authenticate")
    @Action(input = "urn:authenticate", output = "urn:authenticateResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:authenticateRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "authenticate", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.Authenticate")
    @ResponseWrapper(localName = "authenticateResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.AuthenticateResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Boolean authenticate(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName,
        @WebParam(name = "credential", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String credential
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getPasswordExpirationTime")
    @Action(input = "urn:getPasswordExpirationTime", output = "urn:getPasswordExpirationTimeResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getPasswordExpirationTimeRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getPasswordExpirationTime", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetPasswordExpirationTime")
    @ResponseWrapper(localName = "getPasswordExpirationTimeResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetPasswordExpirationTimeResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Long getPasswordExpirationTime(

        @WebParam(name = "username", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String username
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getUserClaimValuesForClaims")
    @Action(input = "urn:getUserClaimValuesForClaims", output = "urn:getUserClaimValuesForClaimsResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getUserClaimValuesForClaimsRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getUserClaimValuesForClaims", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserClaimValuesForClaims")
    @ResponseWrapper(localName = "getUserClaimValuesForClaimsResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetUserClaimValuesForClaimsResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<org.wso2.carbon.user.mgt.common.xsd.ClaimValue> getUserClaimValuesForClaims(

        @WebParam(name = "userName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String userName,
        @WebParam(name = "claims", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.util.List<java.lang.String> claims,
        @WebParam(name = "profileName", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        java.lang.String profileName
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:setUserClaimValues")
    @Action(input = "urn:setUserClaimValues", output = "urn:setUserClaimValuesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:setUserClaimValuesRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void setUserClaimValues(

        @WebParam(partName = "parameters", name = "setUserClaimValues", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        SetUserClaimValues parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:deleteUserClaimValue")
    @Action(input = "urn:deleteUserClaimValue", output = "urn:deleteUserClaimValueResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:deleteUserClaimValueRemoteUserStoreManagerServiceUserStoreException")})
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void deleteUserClaimValue(

        @WebParam(partName = "parameters", name = "deleteUserClaimValue", targetNamespace = "http://service.ws.um.carbon.wso2.org")
        DeleteUserClaimValue parameters
    ) throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:isReadOnly")
    @Action(input = "urn:isReadOnly", output = "urn:isReadOnlyResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:isReadOnlyRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "isReadOnly", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.IsReadOnly")
    @ResponseWrapper(localName = "isReadOnlyResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.IsReadOnlyResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.lang.Boolean isReadOnly()
 throws RemoteUserStoreManagerServiceUserStoreException_Exception;

    @WebMethod(action = "urn:getHybridRoles")
    @Action(input = "urn:getHybridRoles", output = "urn:getHybridRolesResponse", fault = {@FaultAction(className = RemoteUserStoreManagerServiceUserStoreException_Exception.class, value = "urn:getHybridRolesRemoteUserStoreManagerServiceUserStoreException")})
    @RequestWrapper(localName = "getHybridRoles", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetHybridRoles")
    @ResponseWrapper(localName = "getHybridRolesResponse", targetNamespace = "http://service.ws.um.carbon.wso2.org", className = "org.wso2.carbon.um.ws.service.GetHybridRolesResponse")
    @WebResult(name = "return", targetNamespace = "http://service.ws.um.carbon.wso2.org")
    public java.util.List<java.lang.String> getHybridRoles()
 throws RemoteUserStoreManagerServiceUserStoreException_Exception;
}
